 1 PRE const
 1 DEL {
 2 PRE int
 2 IDE x
 2 REL =
 2 NRO 1
 2 DEL ,
 3 IDE x
 3 REL =
 3 NRO 6
 3 DEL ,
 4 IDE k
 4 REL =
 4 NRO 200
 4 ART -
 4 NRO 100
 4 DEL ;
 5 PRE float
 5 IDE x
 5 REL =
 5 NRO 5
 5 DEL ,
 6 IDE x
 6 REL =
 6 NRO 6
 6 DEL ;
 7 PRE int
 7 IDE x
 7 DEL [
 7 NRO 10
 7 DEL ]
 7 REL =
 7 CDC "vetor"
 7 DEL ;
 8 IDE Classe
 8 IDE z
 8 REL =
 8 IDE x
 8 DEL [
 8 NRO 0
 8 DEL ]
 8 DEL ,
 9 IDE y
 9 REL =
 9 IDE x
 9 DEL .
 9 IDE y
 9 DEL ,
10 IDE z
10 REL =
10 CDC "oi"
10 DEL ,
11 IDE x
11 REL =
11 IDE y
11 DEL [
11 NRO 0
11 DEL ]
11 DEL [
11 NRO 0
11 DEL ]
11 DEL [
11 NRO 0
11 DEL ]
11 DEL ;
12 IDE Test
12 IDE vector
12 REL =
12 DEL [
12 DEL [
12 NRO 0
12 DEL ]
12 DEL ,
12 DEL [
12 PRE true
12 DEL ,
12 PRE false
12 DEL ,
12 NRO 2
12 DEL ,
12 DEL [
12 PRE true
12 DEL ,
12 PRE false
12 DEL ,
12 DEL [
12 IDE vetor
12 DEL ,
12 IDE vetor
12 DEL ,
12 IDE fff2
12 DEL ]
12 DEL ]
12 DEL ]
12 DEL ,
12 DEL [
12 NRO 10
12 ART -
12 NRO 20
12 DEL ,
12 NRO 2
12 DEL ,
12 NRO 3
12 DEL ,
12 IDE a
12 DEL ]
12 DEL ]
12 DEL ;
13 DEL }
15 PRE class
15 IDE Conta
15 DEL {
16 PRE variables
16 DEL {
17 PRE string
17 IDE proprietario
17 DEL ;
18 IDE double
18 IDE saldo
18 REL =
18 NRO 0
18 DEL ,
18 IDE limite
18 REL =
18 NRO 1500
18 DEL ;
19 PRE int
19 IDE numero
19 DEL ;
20 DEL }
22 PRE method
22 PRE void
22 IDE depositar
22 DEL (
22 PRE float
22 IDE valor
22 DEL )
22 DEL {
23 IDE saldo
23 REL =
23 IDE saldo
23 ART +
23 IDE valor
23 DEL ;
24 PRE if
24 DEL (
24 IDE x
24 REL >
24 CDC "value"
24 LOG &&
24 DEL (
24 IDE x
24 REL ==
24 IDE y
24 LOG ||
24 DEL (
24 IDE y
24 DEL .
24 IDE y
24 REL <=
24 IDE x
24 LOG &&
24 IDE x
24 REL ==
24 NRO 5
24 DEL )
24 DEL )
24 LOG ||
24 IDE X
24 DEL [
24 NRO 0
24 DEL ]
24 DEL [
24 NRO 0
24 DEL ]
24 DEL [
24 NRO 0
24 DEL ]
24 DEL )
24 DEL {
25 IDE x
25 REL =
25 NRO 1
25 DEL ;
26 DEL }
26 PRE else
26 DEL {
27 IDE outro
27 DEL .
27 IDE metodo
27 DEL (
27 DEL )
27 DEL ;
28 IDE contador
28 ART ++
28 DEL ;
30 PRE if
30 DEL (
30 PRE true
30 LOG ||
30 PRE false
30 DEL )
30 DEL {
31 IDE x
31 REL =
31 IDE nested
31 DEL .
31 IDE cif
31 DEL (
31 DEL )
31 DEL ;
32 IDE k
32 ART --
32 DEL ;
33 IDE m
33 REL =
33 IDE vaaar
33 ART +
33 NRO 10
33 ART *
33 IDE constante
33 DEL ;
34 IDE metodo
34 DEL (
34 DEL )
34 DEL ;
35 DEL }
35 PRE else
35 DEL {
36 IDE fazer
36 DEL .
36 IDE nada
36 DEL (
36 DEL )
36 DEL ;
37 IDE nested
37 REL =
37 IDE celse
37 DEL ;
38 DEL }
39 DEL }
40 PRE return
40 PRE void
40 DEL ;
41 DEL }
43 PRE method
43 PRE void
43 IDE saque
43 DEL (
43 PRE float
43 IDE valor
43 DEL )
43 DEL {
44 IDE saldo
44 REL =
44 IDE saldo
44 ART -
44 IDE valor
44 DEL ;
45 PRE return
45 PRE void
45 DEL ;
46 DEL }
48 PRE method
48 IDE double
48 IDE getSaldo
48 DEL (
48 DEL )
48 DEL {
49 PRE return
49 IDE saldo
49 DEL ;
50 DEL }
52 PRE method
52 PRE void
52 IDE emprestimo
52 DEL (
52 PRE float
52 IDE valor
52 DEL ,
52 PRE float
52 IDE juros
52 DEL )
52 DEL {
53 IDE saldo
53 REL =
53 IDE saldo
53 ART -
53 DEL (
53 IDE valor
53 ART *
53 DEL (
53 NRO 1
53 ART +
53 IDE juros
53 DEL )
53 DEL )
53 DEL ;
54 PRE return
54 PRE void
54 DEL ;
55 DEL }
57 PRE method
57 PRE void
57 IDE emprestimo
57 DEL (
57 PRE float
57 IDE valor
57 DEL )
57 DEL {
58 IDE emprestimo
58 DEL (
58 IDE valor
58 DEL ,
58 IDE TAXA_DE_JUROS
58 DEL )
58 DEL ;
59 PRE return
59 IDE voud
59 DEL ;
60 DEL }
62 PRE method
62 PRE int
62 IDE nomeDoMetodo
62 DEL (
62 PRE int
62 IDE a
62 DEL ,
62 PRE float
62 IDE b
62 DEL ,
62 IDE Classe
62 IDE c
62 DEL )
62 DEL {
63 IDE a
63 ART ++
63 DEL ;
64 IDE c
64 DEL .
64 IDE atributo
64 DEL .
64 IDE metodo
64 DEL (
64 DEL )
64 DEL ;
65 IDE a
65 REL =
65 IDE b
65 ART *
65 NRO 2
65 ART +
65 IDE xk
65 DEL ;
67 PRE if
67 DEL (
67 IDE x
67 REL >
67 CDC "value"
67 LOG &&
67 DEL (
67 IDE x
67 REL ==
67 IDE y
67 LOG ||
67 DEL (
67 IDE y
67 DEL .
67 IDE y
67 REL <=
67 IDE x
67 LOG &&
67 IDE x
67 REL ==
67 NRO 5
67 DEL )
67 DEL )
67 LOG ||
67 IDE X
67 DEL [
67 NRO 0
67 DEL ]
67 DEL [
67 NRO 0
67 DEL ]
67 DEL [
67 NRO 0
67 DEL ]
67 DEL )
67 DEL {
68 IDE x
68 REL =
68 NRO 1
68 DEL ;
69 DEL }
69 PRE else
69 DEL {
70 IDE outro
70 DEL .
70 IDE metodo
70 DEL (
70 DEL )
70 DEL ;
71 IDE contador
71 ART ++
71 DEL ;
72 DEL }
74 PRE while
74 DEL (
74 IDE x
74 ART +
74 NRO 2
74 REL >
74 NRO 10
74 DEL )
74 DEL {
75 IDE atualiza
75 DEL (
75 DEL )
75 DEL ;
76 IDE proximo
76 DEL (
76 DEL )
76 ART +
76 NRO 10
76 DEL ;
77 IDE x
77 ART ++
77 DEL ;
78 DEL }
80 PRE return
80 PRE true
80 DEL ;
81 DEL }
82 DEL }
84 PRE class
84 IDE ContaPremium
84 PRE extends
84 IDE Conta
84 DEL {
85 PRE method
85 PRE void
85 IDE emprestimoPremium
85 DEL (
85 PRE float
85 IDE valor
85 DEL )
85 DEL {
86 PRE variables
86 DEL {
86 PRE float
86 IDE taxaNova
86 REL =
86 IDE TAXA_DE_JUROS
86 ART /
86 NRO 2
86 DEL ;
86 DEL }
87 IDE emprestimo
87 DEL (
87 IDE valor
87 DEL ,
87 IDE taxaNova
87 DEL )
87 DEL ;
88 PRE return
88 PRE void
88 DEL ;
89 DEL }
90 DEL }
92 PRE class
92 IDE ContaSuperPremium
92 PRE extends
92 IDE ContaPremium
92 DEL {
93 PRE method
93 PRE void
93 IDE emprestimoPremium
93 DEL (
93 PRE float
93 IDE valor
93 DEL )
93 DEL {
94 IDE emprestimo
94 DEL (
94 IDE valor
94 DEL ,
94 NRO 0
94 DEL )
94 DEL ;
95 PRE return
95 PRE void
95 DEL ;
96 DEL }
97 DEL }
99 PRE class
99 IDE Banco
99 DEL {
100 PRE variables
100 DEL {
101 PRE int
101 IDE x
101 DEL ,
102 IDE x
102 REL =
102 NRO 6
102 DEL ;
103 PRE float
103 IDE x
103 REL =
103 NRO 5
103 DEL ,
104 IDE x
104 DEL ;
105 PRE float
105 IDE x
105 DEL ;
106 IDE Classe
106 IDE z
106 REL =
106 IDE x
106 DEL [
106 NRO 0
106 DEL ]
106 DEL ,
107 IDE y
107 REL =
107 IDE x
107 DEL .
107 IDE y
107 DEL ,
108 IDE z
108 REL =
108 CDC "oi"
108 DEL ,
109 IDE x
109 REL =
109 IDE y
109 DEL [
109 NRO 0
109 DEL ]
109 DEL [
109 NRO 0
109 DEL ]
109 DEL [
109 NRO 0
109 DEL ]
109 DEL ;
110 PRE int
110 IDE k
110 REL =
110 DEL [
110 DEL [
110 NRO 0
110 DEL ]
110 DEL ,
110 DEL [
110 PRE true
110 DEL ,
110 PRE false
110 DEL ,
110 NRO 2
110 DEL ,
110 DEL [
110 PRE true
110 DEL ,
110 PRE false
110 DEL ,
110 DEL [
110 IDE vetor
110 DEL ,
110 IDE vetor
110 DEL ,
110 IDE fff2
110 DEL ]
110 DEL ]
110 DEL ]
110 DEL ,
110 DEL [
110 NRO 1
110 DEL ,
110 NRO 2
110 DEL ,
110 NRO 3
110 DEL ,
110 IDE a
110 DEL ]
110 DEL ]
110 DEL ;
111 DEL }
113 PRE method
113 IDE boolean
113 IDE addConta
113 DEL (
113 DEL )
113 DEL {
114 PRE variables
114 DEL {
115 IDE Conta
115 IDE conta
115 DEL ;
116 IDE boolean
116 IDE result
116 REL =
116 PRE false
116 DEL ;
117 DEL }
119 PRE if
119 DEL (
119 IDE num_conta
119 REL <
119 IDE NUM_CONTAS
119 DEL )
119 DEL {
120 IDE conta
120 DEL .
120 IDE numero
120 REL =
120 IDE num_contas
120 DEL ;
121 IDE contas
121 DEL [
121 IDE num_contas
121 DEL ]
121 REL =
121 IDE conta
121 DEL ;
122 IDE result
122 REL =
122 PRE true
122 DEL ;
123 DEL }
124 PRE else
124 DEL {
125 IDE result
125 REL =
125 PRE false
125 DEL ;
126 DEL }
128 PRE return
128 IDE result
128 DEL ;
129 DEL }
131 PRE method
131 IDE double
131 IDE getSaldo
131 DEL (
131 PRE int
131 IDE numConta
131 DEL )
131 DEL {
132 PRE variables
132 DEL {
133 PRE int
133 IDE i
133 REL =
133 NRO 0
133 DEL ;
134 PRE int
134 IDE result
134 REL =
134 NRO -1
134 DEL ;
135 DEL }
136 PRE while
136 DEL (
136 IDE i
136 REL <
136 IDE NUM_CONTAS
136 DEL )
136 DEL {
137 PRE if
137 DEL (
137 IDE contas
137 DEL [
137 IDE i
137 DEL ]
137 DEL .
137 IDE numero
137 REL ==
137 IDE numConta
137 DEL )
137 DEL {
138 IDE result
138 REL =
138 IDE contas
138 DEL [
138 IDE i
138 DEL ]
138 DEL .
138 IDE getSaldo
138 DEL (
138 DEL )
138 DEL ;
139 DEL }
140 DEL }
142 PRE return
142 IDE result
142 DEL ;
143 DEL }
144 DEL }
146 PRE main
146 DEL {
147 PRE variables
147 DEL {
147 IDE Banco
147 IDE banco
147 DEL ;
148 PRE int
148 IDE num_conta
148 DEL ;
149 PRE int
149 IDE saldo
149 REL =
149 NRO 0
149 DEL ;
149 DEL }
150 PRE write
150 DEL (
150 CDC "Consultar saldo de qual conta?"
150 DEL )
150 DEL ;
151 PRE read
151 DEL (
151 IDE num_conta
151 DEL )
151 DEL ;
152 IDE saldo
152 REL =
152 IDE banco
152 DEL .
152 IDE getSaldo
152 DEL (
152 IDE num_conta
152 DEL )
152 DEL ;
153 PRE write
153 DEL (
153 CDC "O saldo da conta "
153 DEL ,
153 IDE num_conta
153 DEL ,
153 CDC " eh de "
153 DEL ,
153 IDE saldo
153 DEL )
153 DEL ;
154 DEL }
-1 EOF $


