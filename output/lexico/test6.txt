 1 PRE const
 1 DEL {
 2 PRE int
 2 IDE a
 2 REL =
 2 NRO 1
 2 DEL ,
 3 IDE b
 3 REL =
 3 NRO 6
 3 DEL ,
 4 IDE c
 4 REL =
 4 NRO 200
 4 ART -
 4 NRO 100
 4 DEL ;
 5 PRE float
 5 IDE d
 5 REL =
 5 NRO 5
 5 DEL ,
 6 IDE e
 6 REL =
 6 NRO 6
 6 DEL ;
 7 PRE int
 7 IDE f
 7 REL =
 7 CDC "vetor"
 7 DEL ;
 8 PRE string
 8 IDE g
 8 REL =
 8 IDE x
 8 DEL ,
 9 IDE h
 9 REL =
 9 IDE g
 9 DEL ,
10 IDE i
10 REL =
10 CDC "oi"
10 ART +
10 CDC "blz"
10 DEL ,
11 IDE j
11 REL =
11 IDE y
11 DEL ;
12 PRE float
12 IDE k
12 REL =
12 NRO 2
12 DEL ;
13 DEL }
15 PRE class
15 IDE Conta
15 DEL {
16 PRE variables
16 DEL {
17 PRE string
17 IDE proprietario
17 DEL ;
18 IDE double
18 IDE saldo
18 REL =
18 NRO 0
18 DEL ,
18 IDE limite
18 REL =
18 NRO 1500
18 DEL ;
19 PRE int
19 IDE numero
19 DEL ;
20 PRE int
20 IDE x
20 REL =
20 NRO 1
20 DEL ,
21 IDE x
21 REL =
21 NRO 6
21 DEL ,
22 IDE k
22 REL =
22 NRO 200
22 ART -
22 NRO 100
22 DEL ;
23 PRE float
23 IDE x
23 REL =
23 NRO 5
23 DEL ,
24 IDE x
24 REL =
24 NRO 6
24 DEL ;
25 PRE int
25 IDE x
25 DEL [
25 NRO 10
25 DEL ]
25 REL =
25 CDC "vetor"
25 DEL ;
26 IDE Classe
26 IDE z
26 REL =
26 IDE x
26 DEL [
26 NRO 0
26 DEL ]
26 DEL ,
27 IDE y
27 REL =
27 IDE x
27 DEL .
27 IDE y
27 DEL ,
28 IDE z
28 REL =
28 CDC "oi"
28 DEL ,
29 IDE x
29 REL =
29 IDE y
29 DEL [
29 NRO 0
29 DEL ]
29 DEL [
29 NRO 0
29 DEL ]
29 DEL [
29 NRO 0
29 DEL ]
29 DEL ;
30 IDE Test
30 IDE vector
30 REL =
30 DEL [
30 DEL [
30 NRO 0
30 DEL ]
30 DEL ,
30 DEL [
30 PRE true
30 DEL ,
30 PRE false
30 DEL ,
30 NRO 2
30 DEL ,
30 DEL [
30 PRE true
30 DEL ,
30 PRE false
30 DEL ,
30 DEL [
30 IDE vetor
30 DEL ,
30 IDE vetor
30 DEL ,
30 IDE fff2
30 DEL ]
30 DEL ]
30 DEL ]
30 DEL ,
30 DEL [
30 NRO 10
30 ART -
30 NRO 20
30 DEL ,
30 NRO 2
30 DEL ,
30 NRO 3
30 DEL ,
30 IDE a
30 DEL ]
30 DEL ]
30 DEL ;
31 DEL }
33 PRE method
33 PRE void
33 IDE depositar
33 DEL (
33 PRE float
33 IDE valor
33 DEL )
33 DEL {
34 IDE saldo
34 REL =
34 IDE saldo
34 ART +
34 IDE valor
34 DEL ;
35 PRE if
35 DEL (
35 IDE x
35 REL >
35 CDC "value"
35 LOG &&
35 IDE x
35 REL ==
35 IDE y
35 LOG ||
35 DEL (
35 IDE y
35 DEL .
35 IDE y
35 REL <=
35 IDE x
35 LOG &&
35 IDE x
35 REL ==
35 NRO 5
35 DEL )
35 LOG ||
35 IDE X
35 DEL [
35 NRO 0
35 DEL ]
35 DEL [
35 NRO 0
35 DEL ]
35 DEL [
35 NRO 0
35 DEL ]
35 DEL )
35 DEL {
36 IDE x
36 REL =
36 NRO 1
36 DEL ;
37 DEL }
37 PRE else
37 DEL {
38 IDE outro
38 DEL .
38 IDE metodo
38 DEL (
38 DEL )
38 DEL ;
39 IDE contador
39 ART ++
39 DEL ;
41 PRE if
41 DEL (
41 PRE true
41 LOG ||
41 PRE false
41 DEL )
41 DEL {
42 IDE x
42 REL =
42 IDE nested
42 DEL .
42 IDE cif
42 DEL (
42 DEL )
42 DEL ;
43 IDE k
43 ART --
43 DEL ;
44 IDE m
44 REL =
44 IDE vaaar
44 ART +
44 NRO 10
44 ART *
44 IDE constante
44 DEL ;
45 IDE metodo
45 DEL (
45 DEL )
45 DEL ;
46 DEL }
46 PRE else
46 DEL {
47 IDE fazer
47 DEL .
47 IDE nada
47 DEL (
47 DEL )
47 DEL ;
48 IDE nested
48 REL =
48 IDE celse
48 DEL ;
49 DEL }
50 DEL }
51 PRE return
51 PRE void
51 DEL ;
52 DEL }
54 PRE method
54 PRE void
54 IDE saque
54 DEL (
54 PRE float
54 IDE valor
54 DEL )
54 DEL {
55 IDE saldo
55 REL =
55 IDE saldo
55 ART -
55 IDE valor
55 DEL ;
56 PRE return
56 PRE void
56 DEL ;
57 DEL }
59 PRE method
59 IDE double
59 IDE getSaldo
59 DEL (
59 DEL )
59 DEL {
60 PRE return
60 IDE saldo
60 DEL ;
61 DEL }
63 PRE method
63 PRE void
63 IDE emprestimo
63 DEL (
63 PRE float
63 IDE valor
63 DEL ,
63 PRE float
63 IDE juros
63 DEL )
63 DEL {
64 IDE saldo
64 REL =
64 IDE saldo
64 ART -
64 DEL (
64 IDE valor
64 ART *
64 DEL (
64 NRO 1
64 ART +
64 IDE juros
64 DEL )
64 DEL )
64 DEL ;
65 PRE return
65 PRE void
65 DEL ;
66 DEL }
68 PRE method
68 PRE void
68 IDE emprestimo
68 DEL (
68 PRE float
68 IDE valor
68 DEL )
68 DEL {
69 IDE emprestimo
69 DEL (
69 IDE valor
69 DEL ,
69 IDE TAXA_DE_JUROS
69 DEL )
69 DEL ;
70 PRE return
70 IDE voud
70 DEL ;
71 DEL }
73 PRE method
73 PRE int
73 IDE nomeDoMetodo
73 DEL (
73 PRE int
73 IDE a
73 DEL ,
73 PRE float
73 IDE b
73 DEL ,
73 IDE Classe
73 IDE c
73 DEL )
73 DEL {
74 IDE a
74 ART ++
74 DEL ;
75 IDE c
75 DEL .
75 IDE atributo
75 DEL .
75 IDE metodo
75 DEL (
75 DEL )
75 DEL ;
76 IDE a
76 REL =
76 IDE b
76 ART *
76 NRO 2
76 ART +
76 IDE xk
76 DEL ;
78 PRE if
78 DEL (
78 IDE x
78 REL >
78 CDC "value"
78 LOG &&
78 DEL (
78 IDE x
78 REL ==
78 IDE y
78 LOG ||
78 DEL (
78 IDE y
78 DEL .
78 IDE y
78 REL <=
78 IDE x
78 LOG &&
78 IDE x
78 REL ==
78 NRO 5
78 DEL )
78 DEL )
78 LOG ||
78 IDE X
78 DEL [
78 NRO 0
78 DEL ]
78 DEL [
78 NRO 0
78 DEL ]
78 DEL [
78 NRO 0
78 DEL ]
78 DEL )
78 DEL {
79 IDE x
79 REL =
79 NRO 1
79 DEL ;
80 DEL }
80 PRE else
80 DEL {
81 IDE outro
81 DEL .
81 IDE metodo
81 DEL (
81 DEL )
81 DEL ;
82 IDE contador
82 ART ++
82 DEL ;
83 DEL }
85 PRE while
85 DEL (
85 IDE x
85 ART +
85 NRO 2
85 REL >
85 NRO 10
85 DEL )
85 DEL {
86 IDE atualiza
86 DEL (
86 DEL )
86 DEL ;
87 IDE proximo
87 DEL (
87 DEL )
87 ART +
87 NRO 10
87 DEL ;
88 IDE x
88 ART ++
88 DEL ;
89 DEL }
91 PRE return
91 PRE true
91 DEL ;
92 DEL }
93 DEL }
95 PRE class
95 IDE ContaPremium
95 PRE extends
95 IDE Conta
95 DEL {
96 PRE method
96 PRE void
96 IDE emprestimoPremium
96 DEL (
96 PRE float
96 IDE valor
96 DEL )
96 DEL {
97 PRE variables
97 DEL {
97 PRE float
97 IDE taxaNova
97 REL =
97 IDE TAXA_DE_JUROS
97 ART /
97 NRO 2
97 DEL ;
97 DEL }
98 IDE emprestimo
98 DEL (
98 IDE valor
98 DEL ,
98 IDE taxaNova
98 DEL )
98 DEL ;
99 PRE return
99 PRE void
99 DEL ;
100 DEL }
101 DEL }
103 PRE class
103 IDE ContaSuperPremium
103 PRE extends
103 IDE ContaPremium
103 DEL {
104 PRE method
104 PRE void
104 IDE emprestimoPremium
104 DEL (
104 PRE float
104 IDE valor
104 DEL )
104 DEL {
105 IDE emprestimo
105 DEL (
105 IDE valor
105 DEL ,
105 NRO 0
105 DEL )
105 DEL ;
106 PRE return
106 PRE void
106 DEL ;
107 DEL }
108 DEL }
110 PRE class
110 IDE Banco
110 DEL {
111 PRE variables
111 DEL {
112 PRE int
112 IDE x
112 DEL ,
113 IDE x
113 REL =
113 NRO 6
113 DEL ;
114 PRE float
114 IDE x
114 REL =
114 NRO 5
114 DEL ,
115 IDE x
115 DEL ;
116 PRE float
116 IDE x
116 DEL ;
117 IDE Classe
117 IDE z
117 REL =
117 IDE x
117 DEL [
117 NRO 0
117 DEL ]
117 DEL ,
118 IDE y
118 REL =
118 IDE x
118 DEL .
118 IDE y
118 DEL ,
119 IDE z
119 REL =
119 CDC "oi"
119 DEL ,
120 IDE x
120 REL =
120 IDE y
120 DEL [
120 NRO 0
120 DEL ]
120 DEL [
120 NRO 0
120 DEL ]
120 DEL [
120 NRO 0
120 DEL ]
120 DEL ;
121 PRE int
121 IDE k
121 REL =
121 DEL [
121 DEL [
121 NRO 0
121 DEL ]
121 DEL ,
121 DEL [
121 PRE true
121 DEL ,
121 PRE false
121 DEL ,
121 NRO 2
121 DEL ,
121 DEL [
121 PRE true
121 DEL ,
121 PRE false
121 DEL ,
121 DEL [
121 IDE vetor
121 DEL ,
121 IDE vetor
121 DEL ,
121 IDE fff2
121 DEL ]
121 DEL ]
121 DEL ]
121 DEL ,
121 DEL [
121 NRO 1
121 DEL ,
121 NRO 2
121 DEL ,
121 NRO 3
121 DEL ,
121 IDE a
121 DEL ]
121 DEL ]
121 DEL ;
122 DEL }
124 PRE method
124 IDE boolean
124 IDE addConta
124 DEL (
124 DEL )
124 DEL {
125 PRE variables
125 DEL {
126 IDE Conta
126 IDE conta
126 DEL ;
127 IDE boolean
127 IDE result
127 REL =
127 PRE false
127 DEL ;
128 DEL }
130 PRE if
130 DEL (
130 IDE num_conta
130 REL <
130 IDE NUM_CONTAS
130 DEL )
130 DEL {
131 IDE conta
131 DEL .
131 IDE numero
131 REL =
131 IDE num_contas
131 DEL ;
132 IDE contas
132 DEL [
132 IDE num_contas
132 DEL ]
132 REL =
132 IDE conta
132 DEL ;
133 IDE result
133 REL =
133 PRE true
133 DEL ;
134 DEL }
135 PRE else
135 DEL {
136 IDE result
136 REL =
136 PRE false
136 DEL ;
137 DEL }
139 PRE return
139 IDE result
139 DEL ;
140 DEL }
142 PRE method
142 IDE double
142 IDE getSaldo
142 DEL (
142 PRE int
142 IDE numConta
142 DEL )
142 DEL {
143 PRE variables
143 DEL {
144 PRE int
144 IDE i
144 REL =
144 NRO 0
144 DEL ;
145 PRE int
145 IDE result
145 REL =
145 NRO -1
145 DEL ;
146 DEL }
147 PRE while
147 DEL (
147 IDE i
147 REL <
147 IDE NUM_CONTAS
147 DEL )
147 DEL {
148 PRE if
148 DEL (
148 IDE contas
148 DEL [
148 IDE i
148 DEL ]
148 DEL .
148 IDE numero
148 REL ==
148 IDE numConta
148 DEL )
148 DEL {
149 IDE result
149 REL =
149 IDE contas
149 DEL [
149 IDE i
149 DEL ]
149 DEL .
149 IDE getSaldo
149 DEL (
149 DEL )
149 DEL ;
150 DEL }
151 DEL }
153 PRE return
153 IDE result
153 DEL ;
154 DEL }
155 DEL }
157 PRE main
157 DEL {
158 PRE variables
158 DEL {
158 IDE Banco
158 IDE banco
158 DEL ;
159 PRE int
159 IDE num_conta
159 DEL ;
160 PRE int
160 IDE saldo
160 REL =
160 NRO 0
160 DEL ;
160 DEL }
161 IDE chamada_funcao
161 DEL (
161 DEL )
161 DEL ;
162 PRE write
162 DEL (
162 CDC "Consultar saldo de qual conta?"
162 DEL )
162 DEL ;
163 PRE read
163 DEL (
163 IDE num_conta
163 DEL )
163 DEL ;
164 IDE saldo
164 REL =
164 IDE banco
164 DEL .
164 IDE getSaldo
164 DEL (
164 IDE num_conta
164 DEL )
164 DEL ;
165 PRE write
165 DEL (
165 CDC "O saldo da conta "
165 DEL ,
165 IDE num_conta
165 DEL ,
165 CDC " eh de "
165 DEL ,
165 IDE saldo
165 DEL )
165 DEL ;
166 DEL }
-1 EOF $


